ShaderType = IL_SHADER_COMPUTE
TargetChip = t
; ------------- SC_SRCSHADER Dump ------------------
SC_SHADERSTATE: u32NumIntVSConst = 0
SC_SHADERSTATE: u32NumIntPSConst = 0
SC_SHADERSTATE: u32NumIntGSConst = 0
SC_SHADERSTATE: u32NumBoolVSConst = 0
SC_SHADERSTATE: u32NumBoolPSConst = 0
SC_SHADERSTATE: u32NumBoolGSConst = 0
SC_SHADERSTATE: u32NumFloatVSConst = 0
SC_SHADERSTATE: u32NumFloatPSConst = 0
SC_SHADERSTATE: u32NumFloatGSConst = 0
u32SCOptions[0] = 0x00680000 SCOption_IGNORE_SAMPLE_L_BUG SCOption_FLOAT_DO_NOT_DIST SCOption_FLOAT_DO_NOT_REASSOC
u32SCOptions[1] = 0x40000000 SCOption_R800_UAV_NONARRAY_FIXUP
u32SCOptions[2] = 0x08200000 SCOption_R1000_BYTE_SHORT_WRITE_WORKAROUND_BUG317611 SCOption_R1000_READLANE_SMRD_WORKAROUND_BUG343479
u32SCOptions[3] = 0x00800204 SCOption_R1000_BARRIER_WORKAROUND_BUG405404 SCOption_R1000R1100_VCCZ_CLOBBER_WORKAROUND_BUG457939 SCOption_SELECTIVE_INLINE
u32SCOptions[4] = 0x00004000 SCOption_R1000_ENABLE_CALL_STACK
; -------- Disassembly --------------------
shader main
  asic(SI)
  type(CS)

  s_movk_i32    s2, 0x0000                                  // 00000000: B0020000
  s_sub_u32     s2, s2, 0                                   // 00000004: 80828002
  s_sub_u32     s19, s2, 0                                  // 00000008: 80938002
  s_mov_b32     m0, 0x00008000                              // 0000000C: BEFC03FF 00008000
  s_buffer_load_dword  s0, s[8:11], 0x04                    // 00000014: C2000904
  s_buffer_load_dword  s1, s[8:11], 0x18                    // 00000018: C2008918
  s_buffer_load_dword  s2, s[12:15], 0x04                   // 0000001C: C2010D04
  s_buffer_load_dword  s3, s[12:15], 0x00                   // 00000020: C2018D00
  s_waitcnt     lgkmcnt(0)                                  // 00000024: BF8C007F
  s_min_u32     s0, s0, 0x0000ffff                          // 00000028: 8380FF00 0000FFFF
  s_mul_i32     s0, s16, s0                                 // 00000030: 93000010
  s_add_u32     s0, s0, s1                                  // 00000034: 80000100
  v_lshlrev_b32  v1, 3, v0                                  // 00000038: 34020083
  v_add_i32     v0, vcc, s0, v0                             // 0000003C: 4A000000
  v_add_i32     v1, vcc, s2, v1                             // 00000040: 4A020202
  ds_read_b64   v[1:2], v1                                  // 00000044: D9D80000 01000001
  v_lshlrev_b32  v0, 3, v0                                  // 0000004C: 34000083
  v_add_i32     v0, vcc, s3, v0                             // 00000050: 4A000003
  s_waitcnt     lgkmcnt(0)                                  // 00000054: BF8C007F
  tbuffer_store_format_xy  v[1:2], v0, s[4:7], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000058: EBDD1000 80010100
  s_endpgm                                                  // 00000060: BF810000
end

; ----------------- CS Data ------------------------

codeLenInByte        = 100 bytes;

; launchModeFlags    = 0x00000003
immediateSupport     = TRUE
srdTableSupport      = TRUE

userElementCount     = 3;
;  userElements[0]      = IMM_UAV 12, s[4:7]
;  userElements[1]      = IMM_CONST_BUFFER 0, s[8:11]
;  userElements[2]      = IMM_CONST_BUFFER 1, s[12:15]
extUserElementCount  = 0;
NumVgprs             = 3;
NumSgprs             = 20;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 32768 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s18;
; uavResourceUsage[0]  = 0x00001000
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000003

;COMPUTE_PGM_RSRC2       = 0x004000A0
COMPUTE_PGM_RSRC2:USER_SGPR      = 16
COMPUTE_PGM_RSRC2:TGID_X_EN      = 1
COMPUTE_PGM_RSRC2:LDS_SIZE       = 128
NumThreadX                       = 256
; Register allocation strategy = 0
