ShaderType = IL_SHADER_COMPUTE
TargetChip = t
; ------------- SC_SRCSHADER Dump ------------------
SC_SHADERSTATE: u32NumIntVSConst = 0
SC_SHADERSTATE: u32NumIntPSConst = 0
SC_SHADERSTATE: u32NumIntGSConst = 0
SC_SHADERSTATE: u32NumBoolVSConst = 0
SC_SHADERSTATE: u32NumBoolPSConst = 0
SC_SHADERSTATE: u32NumBoolGSConst = 0
SC_SHADERSTATE: u32NumFloatVSConst = 0
SC_SHADERSTATE: u32NumFloatPSConst = 0
SC_SHADERSTATE: u32NumFloatGSConst = 0
u32SCOptions[0] = 0x00680000 SCOption_IGNORE_SAMPLE_L_BUG SCOption_FLOAT_DO_NOT_DIST SCOption_FLOAT_DO_NOT_REASSOC
u32SCOptions[1] = 0x40000000 SCOption_R800_UAV_NONARRAY_FIXUP
u32SCOptions[2] = 0x08200000 SCOption_R1000_BYTE_SHORT_WRITE_WORKAROUND_BUG317611 SCOption_R1000_READLANE_SMRD_WORKAROUND_BUG343479
u32SCOptions[3] = 0x00800204 SCOption_R1000_BARRIER_WORKAROUND_BUG405404 SCOption_R1000R1100_VCCZ_CLOBBER_WORKAROUND_BUG457939 SCOption_SELECTIVE_INLINE
u32SCOptions[4] = 0x00004000 SCOption_R1000_ENABLE_CALL_STACK
; -------- Disassembly --------------------
shader main
  asic(SI)
  type(CS)

  s_movk_i32    s14, 0x0000                                 // 00000000: B00E0000
  s_sub_u32     s14, s14, 0                                 // 00000004: 808E800E
  s_sub_u32     s24, s14, 0                                 // 00000008: 8098800E
  s_buffer_load_dword  s0, s[8:11], 0x04                    // 0000000C: C2000904
  s_load_dwordx4  s[16:19], s[2:3], 0x68                    // 00000010: C0880368
  v_lshlrev_b32  v1, 3, v0                                  // 00000014: 34020083
  s_waitcnt     lgkmcnt(0)                                  // 00000018: BF8C007F
  v_add_i32     v1, vcc, s0, v1                             // 0000001C: 4A020200
  tbuffer_load_format_xy  v[1:2], v1, s[16:19], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 00000020: EBD91000 80040101
  s_buffer_load_dword  s0, s[4:7], 0x04                     // 00000028: C2000504
  s_buffer_load_dword  s1, s[4:7], 0x18                     // 0000002C: C2008518
  s_buffer_load_dword  s4, s[8:11], 0x00                    // 00000030: C2020900
  s_waitcnt     lgkmcnt(0)                                  // 00000034: BF8C007F
  s_min_u32     s0, s0, 0x0000ffff                          // 00000038: 8380FF00 0000FFFF
  s_mul_i32     s0, s12, s0                                 // 00000040: 9300000C
  s_add_u32     s0, s0, s1                                  // 00000044: 80000100
  v_add_i32     v0, vcc, s0, v0                             // 00000048: 4A000000
  s_load_dwordx4  s[0:3], s[2:3], 0x60                      // 0000004C: C0800360
  v_lshlrev_b32  v0, 3, v0                                  // 00000050: 34000083
  v_add_i32     v0, vcc, s4, v0                             // 00000054: 4A000004
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                       // 00000058: BF8C0070
  tbuffer_store_format_xy  v[1:2], v0, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 0000005C: EBDD1000 80000100
  s_endpgm                                                  // 00000064: BF810000
end

; ----------------- CS Data ------------------------

codeLenInByte        = 104 bytes;

; launchModeFlags    = 0x00000003
immediateSupport     = TRUE
srdTableSupport      = TRUE

userElementCount     = 3;
;  userElements[0]      = PTR_UAV_TABLE, Element=1 dwords, s[2:3]
;  userElements[1]      = IMM_CONST_BUFFER 0, s[4:7]
;  userElements[2]      = IMM_CONST_BUFFER 1, s[8:11]
extUserElementCount  = 0;
NumVgprs             = 3;
NumSgprs             = 25;
FloatMode            = 192;
IeeeMode             = 0;
FlatPtr32            = 0;
ScratchSize          = 0 dwords/thread;
LDSByteSize          = 0 bytes/workgroup (compile time only);
ScratchWaveOffsetReg = s15;
; uavResourceUsage[0]  = 0x00003000
; uavReadOnlyUsage[0]  = 0x00002000
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000003

;COMPUTE_PGM_RSRC2       = 0x00000098
COMPUTE_PGM_RSRC2:USER_SGPR      = 12
COMPUTE_PGM_RSRC2:TGID_X_EN      = 1
NumThreadX                       = 256
; Register allocation strategy = 0
